generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time DateTime @db.Timestamp(6)
  end_time   DateTime @db.Timestamp(6)
  user_id    String   @db.Uuid
  car_id     String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  car        car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model car {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make       String    @db.VarChar(50)
  model      String    @db.VarChar(50)
  year       Int
  color      String    @db.VarChar(20)
  mileage    Int
  location   String    @db.VarChar(100)
  company_id String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  booking    booking[]
  company    company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  car         car[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model operations_dashboard {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  dashboard_name   String             @db.VarChar(100)
  user_id          String             @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  user             user               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  operations_staff operations_staff[]
}

model operations_staff {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  staff_name           String               @db.VarChar(100)
  staff_role           String               @db.VarChar(50)
  dashboard_id         String               @db.Uuid
  created_at           DateTime             @default(now()) @db.Timestamp(6)
  updated_at           DateTime             @default(now()) @db.Timestamp(6)
  operations_dashboard operations_dashboard @relation(fields: [dashboard_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                String                 @unique @db.VarChar(255)
  firstName            String?                @db.VarChar(255)
  lastName             String?                @db.VarChar(255)
  roq_user_id          String                 @db.VarChar(255)
  tenant_id            String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  booking              booking[]
  company              company[]
  operations_dashboard operations_dashboard[]
}
